//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.12.11 at 12:23:32 AM EET 
//


package com.alextrandafir.fx.ws;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.alextrandafir.fx.ws package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Envelope_QNAME = new QName("http://www.ecb.int/vocabulary/2002-08-01/eurofxref", "Envelope");
    private final static QName _Cube_QNAME = new QName("http://www.ecb.int/vocabulary/2002-08-01/eurofxref", "Cube");
    private final static QName _EnvelopeSubject_QNAME = new QName("http://www.ecb.int/vocabulary/2002-08-01/eurofxref", "subject");
    private final static QName _EnvelopeSender_QNAME = new QName("http://www.ecb.int/vocabulary/2002-08-01/eurofxref", "Sender");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.alextrandafir.fx.ws
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Envelope }
     * 
     */
    public Envelope createEnvelope() {
        return new Envelope();
    }

    /**
     * Create an instance of {@link CubeType }
     * 
     */
    public CubeType createCubeType() {
        return new CubeType();
    }

    /**
     * Create an instance of {@link Envelope.Sender }
     * 
     */
    public Envelope.Sender createEnvelopeSender() {
        return new Envelope.Sender();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", name = "Envelope")
    public JAXBElement<Object> createEnvelope(Object value) {
        return new JAXBElement<Object>(_Envelope_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CubeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CubeType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", name = "Cube")
    public JAXBElement<CubeType> createCube(CubeType value) {
        return new JAXBElement<CubeType>(_Cube_QNAME, CubeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", name = "subject", scope = Envelope.class)
    public JAXBElement<String> createEnvelopeSubject(String value) {
        return new JAXBElement<String>(_EnvelopeSubject_QNAME, String.class, Envelope.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Envelope.Sender }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Envelope.Sender }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", name = "Sender", scope = Envelope.class)
    public JAXBElement<Envelope.Sender> createEnvelopeSender(Envelope.Sender value) {
        return new JAXBElement<Envelope.Sender>(_EnvelopeSender_QNAME, Envelope.Sender.class, Envelope.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CubeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CubeType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref", name = "Cube", scope = CubeType.class)
    public JAXBElement<CubeType> createCubeTypeCube(CubeType value) {
        return new JAXBElement<CubeType>(_Cube_QNAME, CubeType.class, CubeType.class, value);
    }

}
